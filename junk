User.findOne({uwi_email})
  .then(user => {
      if(user) return res.status(200).json(
          {msg: 'User with same username already exist'}
      );
      const newUser = new User({
        uwi_email,
        first_name,
        last_name,
        alt_email,
        dob,
        type,
        sex,
        password,
        resetToken,
        resetTokenExpire,
        verified,
        verifiedToken,
      });
  bcrypt.genSalt(10,(err,salt) =>{
      bcrypt.hash(newUser.password, salt, (err, hash) => {
          
          newUser.password= hash;
  newUser
    .save()
    .then(user => {

      crypto.randomBytes(32,(err,buffer)=>{
        if(err){
          console.log(err)
        }
        const token = buffer.toString("hex")
        User.findOne({uwi_email})
        .then(user=>{
          if(!user){
            return res.status(200).json({error:"No User with that email address"})
          }
          user.verifiedToken = token
          user.save()
          User.findOne({uwi_email})
          .then(user=>{
            let mailOption = {
              from: 'oaafinal831@gmail.com',
             to: user.uwi_email,
             subject: 'This is a test',
             text: 'this is a test ', 
             html:`
             <p> Click link to verify email.</p>
             <h5><a href="http://localhost:8080/users/verify/${token}">link</a></h5>
             `,
            }
            transporter.sendMail(mailOption,function(err, data){
              if(err){
               console.log('error',err)
               return res.status(200).json({msg: 'error' });
              }else{
               return res.status(200).json({msg: 'sucessfull' });
              }
            });
          })
        })
      });
          }
      )
      .catch(err => res.status(400).json("msg: " + err));
      });
      })
  })